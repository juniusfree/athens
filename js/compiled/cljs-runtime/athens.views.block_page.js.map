{"version":3,"sources":["athens/views/block_page.cljs"],"mappings":"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","names":["athens.views.block-page/title-style","athens.style.color","garden.selectors/+","athens.views.block-page/transact-string","string","block","athens.util/now-ts","athens.views.block-page/persist-textarea-string","state","diff?","cljs.core.not_EQ_","re-frame.core/dispatch","athens.views.block-page/block-page-change","e","_uid","value","cljs.core.swap_BANG_","cljs.core/assoc","athens.views.block-page/block-page-el","_","reagent.core.atom","parents","editing-uid","refs","map__62089","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply","cljs.core/hash-map","cljs.core.get","children","uid","cljs.core/deref","stylefy.core.use_style","athens.views.node-page/page-style","athens.views.breadcrumbs/breadcrumbs-list","cljs.core.doall","iter__4529__auto__","s__62092","cljs.core/LazySeq","temp__5735__auto__","cljs.core/seq","cljs.core/chunked-seq?","c__4527__auto__","size__4528__auto__","cljs.core/count","b__62094","cljs.core/chunk-buffer","i__62093","map__62095","cljs.core/-nth","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__62091","cljs.core/chunk-rest","map__62098","cljs.core/first","cljs.core/cons","cljs.core/rest","title","athens.views.breadcrumbs/breadcrumb","athens.router.navigate_uid","athens.parse-renderer/parse-and-render","or__4126__auto__","cljs.core.merge","komponentit.autosize/textarea","cljs.core._EQ_","athens.views.node-page/handle-key-down","s__62101","b__62103","i__62102","iter__62100","child","map__62104","map__62106","id","athens.views.blocks/block-el","cljs.core/not-empty","athens.views.node-page/references-style","athens.views.node-page/references-heading-style","reagent.core/adapt-react-class","js/module$node_modules$$material_ui$icons$index.Link","athens.views.node-page/references-list-style","s__62109","b__62111","i__62110","vec__62112","cljs.core.nth","iter__62108","vec__62120","group-title","group","athens.views.node-page/references-group-style","athens.views.node-page/references-group-title-style","athens.parse-renderer/pull-node-from-string","s__62116","b__62118","i__62117","iter__62115","s__62124","b__62126","i__62125","iter__62123","athens.views.node-page/references-group-block-style","athens.views.node-page/ref-comp","athens.views.block-page/block-page-component","ident","athens.db/get-block-document","athens.db/get-parents-recursively","re_frame.core.subscribe","athens.db/get-linked-block-references","cljs.core/chunk-first"],"sourcesContent":["(ns athens.views.block-page\n  (:require\n    [\"@material-ui/icons\" :as mui-icons]\n    [athens.db :as db]\n    [athens.parse-renderer :as parse-renderer]\n    [athens.router :refer [navigate-uid]]\n    [athens.style :refer [color]]\n    [athens.util :refer [now-ts]]\n    [athens.views.blocks :refer [block-el]]\n    [athens.views.breadcrumbs :refer [breadcrumbs-list breadcrumb]]\n    #_[athens.views.buttons :refer [button]]\n    [athens.views.node-page :as node-page]\n    [cljsjs.react]\n    [cljsjs.react.dom]\n    [garden.selectors :as selectors]\n    [komponentit.autosize :as autosize]\n    [re-frame.core :refer [dispatch subscribe]]\n    [reagent.core :as r]\n    [stylefy.core :as stylefy :refer [use-style]]))\n\n\n;;; Styles\n\n\n(def title-style\n  {:position        \"relative\"\n   :overflow        \"visible\"\n   :flex-grow       \"1\"\n   :margin          \"0.1em 0\"\n   :letter-spacing  \"-0.03em\"\n   :word-break      \"break-word\"\n   :line-height     \"1.4em\"\n   ::stylefy/manual [[:textarea {:display \"none\"}]\n                     [:&:hover [:textarea {:display \"block\"\n                                           :z-index 1}]]\n                     [:textarea {:-webkit-appearance \"none\"\n                                 :cursor             \"text\"\n                                 :resize             \"none\"\n                                 :transform          \"translate3d(0,0,0)\"\n                                 :color              \"inherit\"\n                                 :font-weight        \"inherit\"\n                                 :padding            \"0\"\n                                 :letter-spacing     \"inherit\"\n                                 :position           \"absolute\"\n                                 :top                \"0\"\n                                 :left               \"0\"\n                                 :right              \"0\"\n                                 :width              \"100%\"\n                                 :min-height         \"100%\"\n                                 :caret-color        (color :link-color)\n                                 :background         \"transparent\"\n                                 :margin             \"0\"\n                                 :font-size          \"inherit\"\n                                 :line-height        \"inherit\"\n                                 :border-radius      \"0.25rem\"\n                                 :transition         \"opacity 0.15s ease\"\n                                 :border             \"0\"\n                                 :opacity            \"0\"\n                                 :font-family        \"inherit\"}]\n                     [:textarea:focus\n                      :.is-editing {:outline \"none\"\n                                    :z-index 3\n                                    :display \"block\"\n                                    :opacity \"1\"}]\n                     [(selectors/+ :.is-editing :span) {:opacity 0}]]})\n\n;;; Helpers\n\n(defn transact-string\n  \"A helper function that takes a `string` and a `block` and datascript `transact` vector\n  ready for `dispatch`. Used in `block-page-el` function to log when there is a diff and `on-blur`.\"\n  [string block]\n  [:transact [{:db/id        [:block/uid (:block/uid block)]\n               :block/string string\n               :edit/time    (now-ts)}]])\n\n\n(defn persist-textarea-string\n  \"A helper fn that takes `state` containing textarea changes and when user has made a text change dispatches `transact-string`. \"\n  [state block]\n  (let [diff? (not= (:string/local state)\n                    (:string/previous state))]\n    (when diff?\n      (dispatch (transact-string (:string/local state) block)))))\n\n;;; Components\n\n(defn block-page-change\n  [e _uid state]\n  (let [value (.. e -target -value)]\n    (swap! state assoc :string/local value)))\n\n\n(defn block-page-el\n  [_ _ _ _]\n  (let [state (r/atom {:string/local    nil\n                       :string/previous nil})]\n    (fn [block parents editing-uid refs]\n      (let [{:block/keys [string children uid]} block]\n\n        (when (not= string (:string/previous @state))\n          (swap! state assoc :string/previous string :string/local string))\n\n        [:div.block-page (use-style node-page/page-style {:data-uid uid})\n         ;; Parent Context\n         [:span {:style {:color \"gray\"}}\n          [breadcrumbs-list {:style {:font-size \"1.2rem\"}}\n           (doall\n             (for [{:keys [node/title block/uid block/string]} parents]\n               ^{:key uid}\n               [breadcrumb {:key (str \"breadcrumb-\" uid) :on-click #(navigate-uid uid)}\n                [parse-renderer/parse-and-render (or title string) uid]]))]]\n\n         ;; Header\n         [:h1 (merge\n                (use-style title-style {:data-uid uid :class \"block-header\"})\n                {:on-click (fn [e]\n                             (.. e preventDefault)\n                             (dispatch [:editing/uid uid]))})\n          [autosize/textarea\n           {:id          (str \"editable-uid-\" uid)\n            :value       (:string/local @state)\n            :class       (when (= editing-uid uid) \"is-editing\")\n            :auto-focus  true\n            :on-blur     (fn [_] (persist-textarea-string @state block))\n            :on-key-down (fn [e] (node-page/handle-key-down e uid state nil))\n            :on-change   (fn [e] (block-page-change e uid state))}]\n          [:span [parse-renderer/parse-and-render (:string/local @state) uid]]]\n\n         ;; Children\n         [:div (for [child children]\n                 (let [{:keys [db/id]} child]\n                   ^{:key id} [block-el child]))]\n\n         ;; Refs\n         (when (not-empty refs)\n           [:div (use-style node-page/references-style {:key \"Linked References\"})\n            [:section\n             [:h4 (use-style node-page/references-heading-style)\n              [(r/adapt-react-class mui-icons/Link)]\n              [:span \"Linked References\"]]\n              ;; Hide button until feature is implemented\n              ;;[button {:disabled true} [(r/adapt-react-class mui-icons/FilterList)]]]\n             [:div (use-style node-page/references-list-style)\n              (doall\n                (for [[group-title group] refs]\n                  [:div (use-style node-page/references-group-style {:key (str \"group-\" group-title)})\n                   [:h4 (use-style node-page/references-group-title-style)\n                    [:a {:on-click #(navigate-uid (:block/uid @(parse-renderer/pull-node-from-string group-title)))} group-title]]\n                   (doall\n                     (for [block group]\n                       [:div (use-style node-page/references-group-block-style {:key (str \"ref-\" (:block/uid block))})\n                        [node-page/ref-comp block]]))]))]]])]))))\n\n\n(defn block-page-component\n  [ident]\n  (let [block       (db/get-block-document ident)\n        parents     (db/get-parents-recursively ident)\n        editing-uid @(subscribe [:editing/uid])\n        refs        (db/get-linked-block-references block)]\n    [block-page-el block parents editing-uid refs]))\n\n"]}